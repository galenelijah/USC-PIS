name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: usc_pis_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/usc_pis_test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: Run migrations
        run: |
          cd backend
          python manage.py migrate
      - name: Run backend tests
        run: |
          cd backend
          coverage run --source=. manage.py test
          coverage report
          coverage html
      - name: Upload backend coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage-report
          path: backend/htmlcov/
      - name: Lint backend
        run: |
          pip install flake8
          flake8 backend

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install frontend dependencies
        run: |
          cd backend/frontend/frontend
          npm ci
      - name: Run frontend tests
        run: |
          cd backend/frontend/frontend
          npm test -- --watchAll=false --coverage
      - name: Upload frontend coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage-report
          path: backend/frontend/frontend/coverage/
      - name: Lint frontend
        run: |
          cd backend/frontend/frontend
          npm run lint 