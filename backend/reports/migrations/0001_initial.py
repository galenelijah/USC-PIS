# Generated by Django 5.0.2 on 2025-07-06 09:32

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('date_range_start', models.DateTimeField(blank=True, null=True)),
                ('date_range_end', models.DateTimeField(blank=True, null=True)),
                ('filters', models.JSONField(default=dict, help_text='Applied filters for this report')),
                ('export_format', models.CharField(choices=[('PDF', 'PDF Document'), ('EXCEL', 'Excel Spreadsheet'), ('CSV', 'CSV File'), ('JSON', 'JSON Data'), ('HTML', 'HTML Report')], max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('GENERATING', 'Generating'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('EXPIRED', 'Expired')], default='PENDING', max_length=15)),
                ('progress_percentage', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('file_path', models.FileField(blank=True, null=True, upload_to='reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'xlsx', 'csv', 'json', 'html'])])),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('record_count', models.PositiveIntegerField(blank=True, help_text='Number of records in report', null=True)),
                ('generation_time', models.DurationField(blank=True, help_text='Time taken to generate report', null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this report expires', null=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chart_title', models.CharField(max_length=200)),
                ('chart_type', models.CharField(choices=[('BAR', 'Bar Chart'), ('LINE', 'Line Chart'), ('PIE', 'Pie Chart'), ('DOUGHNUT', 'Doughnut Chart'), ('AREA', 'Area Chart'), ('SCATTER', 'Scatter Plot'), ('HISTOGRAM', 'Histogram'), ('HEATMAP', 'Heatmap')], max_length=15)),
                ('chart_data', models.JSONField(help_text='Chart.js compatible data structure')),
                ('chart_options', models.JSONField(default=dict, help_text='Chart.js options')),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charts', to='reports.generatedreport')),
            ],
            options={
                'ordering': ['display_order', 'chart_title'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('report_type', models.CharField(choices=[('PATIENT_SUMMARY', 'Patient Summary Report'), ('VISIT_TRENDS', 'Visit Trends Report'), ('TREATMENT_OUTCOMES', 'Treatment Outcomes Report'), ('MEDICAL_STATISTICS', 'Medical Statistics Report'), ('DENTAL_STATISTICS', 'Dental Statistics Report'), ('FEEDBACK_ANALYSIS', 'Feedback Analysis Report'), ('CAMPAIGN_PERFORMANCE', 'Campaign Performance Report'), ('USER_ACTIVITY', 'User Activity Report'), ('HEALTH_METRICS', 'Health Metrics Report'), ('INVENTORY_REPORT', 'Inventory Report'), ('FINANCIAL_REPORT', 'Financial Report'), ('COMPLIANCE_REPORT', 'Compliance Report'), ('CUSTOM', 'Custom Report')], max_length=25)),
                ('template_content', models.TextField(help_text='HTML template for the report')),
                ('default_filters', models.JSONField(default=dict, help_text='Default filter settings')),
                ('supported_formats', models.JSONField(default=list, help_text='List of supported export formats')),
                ('is_active', models.BooleanField(default=True)),
                ('requires_date_range', models.BooleanField(default=True)),
                ('requires_patient_filter', models.BooleanField(default=False)),
                ('requires_user_filter', models.BooleanField(default=False)),
                ('allowed_roles', models.JSONField(default=list, help_text='List of user roles allowed to generate this report')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['report_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], max_length=15)),
                ('day_of_week', models.PositiveIntegerField(blank=True, help_text='0=Monday, 6=Sunday', null=True)),
                ('day_of_month', models.PositiveIntegerField(blank=True, help_text='1-31', null=True)),
                ('time_of_day', models.TimeField(help_text='Time to generate report')),
                ('email_recipients', models.JSONField(default=list, help_text='List of email addresses')),
                ('export_format', models.CharField(choices=[('PDF', 'PDF Document'), ('EXCEL', 'Excel Spreadsheet'), ('CSV', 'CSV File'), ('JSON', 'JSON Data'), ('HTML', 'HTML Report')], default='PDF', max_length=10)),
                ('filters', models.JSONField(default=dict, help_text='Default filters for scheduled reports')),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('run_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_schedules', to=settings.AUTH_USER_MODEL)),
                ('user_recipients', models.ManyToManyField(blank=True, related_name='scheduled_reports', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='reports.reporttemplate')),
            ],
            options={
                'ordering': ['next_run', 'name'],
            },
        ),
        migrations.AddField(
            model_name='generatedreport',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='reports.reporttemplate'),
        ),
        migrations.CreateModel(
            name='ReportMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_type', models.CharField(choices=[('COUNT', 'Count'), ('PERCENTAGE', 'Percentage'), ('AVERAGE', 'Average'), ('SUM', 'Sum'), ('RATIO', 'Ratio'), ('TREND', 'Trend'), ('DISTRIBUTION', 'Distribution')], max_length=15)),
                ('metric_value', models.JSONField(help_text='Metric value (can be number, list, dict)')),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='reports.generatedreport')),
            ],
            options={
                'ordering': ['display_order', 'metric_name'],
                'unique_together': {('report', 'metric_name')},
            },
        ),
        migrations.CreateModel(
            name='ReportBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Custom name for this bookmark', max_length=200)),
                ('saved_filters', models.JSONField(default=dict, help_text='Saved filter preferences')),
                ('preferred_format', models.CharField(choices=[('PDF', 'PDF Document'), ('EXCEL', 'Excel Spreadsheet'), ('CSV', 'CSV File'), ('JSON', 'JSON Data'), ('HTML', 'HTML Report')], default='PDF', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('use_count', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_bookmarks', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.reporttemplate')),
            ],
            options={
                'ordering': ['-last_used'],
                'unique_together': {('user', 'template', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ReportAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_generations', models.PositiveIntegerField(default=0)),
                ('total_downloads', models.PositiveIntegerField(default=0)),
                ('unique_users', models.PositiveIntegerField(default=0)),
                ('average_generation_time', models.DurationField(blank=True, null=True)),
                ('average_file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('success_rate', models.FloatField(default=0.0, help_text='Percentage of successful generations')),
                ('pdf_downloads', models.PositiveIntegerField(default=0)),
                ('excel_downloads', models.PositiveIntegerField(default=0)),
                ('csv_downloads', models.PositiveIntegerField(default=0)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('calculation_period_start', models.DateTimeField()),
                ('calculation_period_end', models.DateTimeField()),
                ('report_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='reports.reporttemplate')),
            ],
            options={
                'ordering': ['-last_calculated'],
                'unique_together': {('report_template', 'calculation_period_start', 'calculation_period_end')},
            },
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['generated_by', 'status'], name='reports_gen_generat_87c071_idx'),
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['template', 'created_at'], name='reports_gen_templat_b3931a_idx'),
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['expires_at'], name='reports_gen_expires_a93554_idx'),
        ),
    ]
