# Generated by Django 5.0.2

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_type', models.CharField(choices=[('database', 'Database Backup'), ('media', 'Media Files Backup'), ('full', 'Full System Backup'), ('verification', 'Backup Verification'), ('setup', 'Backup Setup'), ('heroku', 'Heroku Backup')], max_length=20)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('in_progress', 'In Progress'), ('warning', 'Warning')], max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('file_size', models.BigIntegerField(blank=True, help_text='Total size of backup files in bytes', null=True)),
                ('checksum', models.CharField(blank=True, help_text='MD5 checksum for integrity verification', max_length=64)),
                ('error_message', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional backup information and settings')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who initiated the backup (if manual)', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Backup Status',
                'verbose_name_plural': 'Backup Statuses',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='BackupSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_type', models.CharField(choices=[('database', 'Database Backup'), ('media', 'Media Files Backup'), ('full', 'Full System Backup'), ('verification', 'Backup Verification'), ('setup', 'Backup Setup'), ('heroku', 'Heroku Backup')], max_length=20)),
                ('schedule_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('manual', 'Manual Only')], max_length=10)),
                ('schedule_time', models.TimeField(help_text='Time of day to run the backup (UTC)')),
                ('is_active', models.BooleanField(default=True)),
                ('retention_days', models.IntegerField(default=7, help_text='Number of days to retain backups')),
                ('configuration', models.JSONField(blank=True, default=dict, help_text='Additional backup configuration options')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Backup Schedule',
                'verbose_name_plural': 'Backup Schedules',
            },
        ),
        migrations.CreateModel(
            name='SystemHealthMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('backup_health', 'Backup System Health'), ('storage_usage', 'Storage Usage'), ('database_size', 'Database Size'), ('media_size', 'Media Files Size'), ('system_uptime', 'System Uptime')], max_length=20)),
                ('value', models.FloatField()),
                ('unit', models.CharField(blank=True, help_text='Unit of measurement (MB, GB, %, hours, etc.)', max_length=20)),
                ('details', models.JSONField(blank=True, default=dict, help_text='Additional metric details and context')),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'System Health Metric',
                'verbose_name_plural': 'System Health Metrics',
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='backupstatus',
            index=models.Index(fields=['-started_at'], name='utils_backu_started_c74736_idx'),
        ),
        migrations.AddIndex(
            model_name='backupstatus',
            index=models.Index(fields=['backup_type', 'status'], name='utils_backu_backup__b88d0b_idx'),
        ),
        migrations.AddIndex(
            model_name='backupstatus',
            index=models.Index(fields=['status', '-started_at'], name='utils_backu_status_2a71b6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='backupschedule',
            unique_together={('backup_type', 'schedule_type')},
        ),
        migrations.AddIndex(
            model_name='systemhealthmetric',
            index=models.Index(fields=['metric_type', '-recorded_at'], name='utils_syste_metric__a5e8f8_idx'),
        ),
        migrations.AddIndex(
            model_name='systemhealthmetric',
            index=models.Index(fields=['-recorded_at'], name='utils_syste_recorde_8b8994_idx'),
        ),
    ]